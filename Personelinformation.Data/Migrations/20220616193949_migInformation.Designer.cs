// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Personelinformation.Data.Concrete.EfCore;

namespace Personelinformation.Data.Migrations
{
    [DbContext(typeof(PersonelContext))]
    [Migration("20220616193949_migInformation")]
    partial class migInformation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Personelinformation.Entity.DetailInformation", b =>
                {
                    b.Property<int>("DetailInformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetailInformationID");

                    b.ToTable("DetailInformations");

                    b.HasData(
                        new
                        {
                            DetailInformationID = 1,
                            BirthPlace = "Ankara",
                            FatherName = "Akif",
                            MotherName = "Ayşe"
                        },
                        new
                        {
                            DetailInformationID = 2,
                            BirthPlace = "İstanbul",
                            FatherName = "Ahmet",
                            MotherName = "Aslı"
                        },
                        new
                        {
                            DetailInformationID = 3,
                            BirthPlace = "Sinop",
                            FatherName = "Hasan",
                            MotherName = "Müge"
                        });
                });

            modelBuilder.Entity("Personelinformation.Entity.Information", b =>
                {
                    b.Property<int>("InformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DetailInformationID")
                        .HasColumnType("int");

                    b.Property<int>("PersonelInformationID")
                        .HasColumnType("int");

                    b.Property<string>("PersonelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonelSurname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InformationID");

                    b.HasIndex("DetailInformationID");

                    b.HasIndex("PersonelInformationID");

                    b.ToTable("Informations");

                    b.HasData(
                        new
                        {
                            InformationID = 1,
                            DetailInformationID = 1,
                            PersonelInformationID = 1,
                            PersonelName = "Hakan",
                            PersonelSurname = "Derkan"
                        },
                        new
                        {
                            InformationID = 2,
                            DetailInformationID = 2,
                            PersonelInformationID = 2,
                            PersonelName = "Adnan",
                            PersonelSurname = "Derkan"
                        },
                        new
                        {
                            InformationID = 3,
                            DetailInformationID = 3,
                            PersonelInformationID = 3,
                            PersonelName = "Konuralp",
                            PersonelSurname = "Derkan"
                        });
                });

            modelBuilder.Entity("Personelinformation.Entity.PersonelInformation", b =>
                {
                    b.Property<int>("PersonelInformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AileSiraNo")
                        .HasColumnType("int");

                    b.Property<int>("CiltNo")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonelInformationID");

                    b.ToTable("PersonelInformations");

                    b.HasData(
                        new
                        {
                            PersonelInformationID = 1,
                            AileSiraNo = 302,
                            CiltNo = 13,
                            Title = "Mühendis"
                        },
                        new
                        {
                            PersonelInformationID = 2,
                            AileSiraNo = 407,
                            CiltNo = 25,
                            Title = "Yazılımcı"
                        },
                        new
                        {
                            PersonelInformationID = 3,
                            AileSiraNo = 123,
                            CiltNo = 32,
                            Title = "Satış Danışmanı"
                        });
                });

            modelBuilder.Entity("Personelinformation.Entity.Information", b =>
                {
                    b.HasOne("Personelinformation.Entity.DetailInformation", "DetailInformation")
                        .WithMany()
                        .HasForeignKey("DetailInformationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Personelinformation.Entity.PersonelInformation", "PersonelInformation")
                        .WithMany()
                        .HasForeignKey("PersonelInformationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetailInformation");

                    b.Navigation("PersonelInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
